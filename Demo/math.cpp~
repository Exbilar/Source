#include <cstdio>
#include <algorithm>
using namespace std;

static const int maxm=1e6+10;

int A[maxm],prime[maxm],phi[maxm];

int gcd(int x,int y){
    while(x^=y^=x^=y%=x);
    return y;
}

void exgcd(int a,int b,int &x,int &y,int &d){
    if(!b){d=a; x=1; y=0; return;}
    exgcd(b,a%b,y,x,d);
    y-=(a/b)*x;
}

void make_prime(int n){
    prime[1]=1;prime[0]=1;
    for(int i=2;i<n;i++)
	if(!prime[i])
	    for(int j=i+i;j<=n;j+=i)
		prime[j]=1;			
}						
					       
void phi_table(int n){				
    phi[1]=1;				      
    for(int i=2;i<=n;i++){			
	if(!phi[i]){			       
	    for(int j=i;j<=n;j+=i){		
		if(!phi[j])phi[j]=j;		
		phi[j]=phi[j]*(i-1)/i;		
	    }					
	}					
    }						
}						
						
int inv(int a,int p){				
    int d,x,y;					
    exgcd(a,p,x,y,d);				
    return d==1?(x+p)%p:0;			
}						

void shake_inv(int p){
    A[1]=1;
    for(int i=2;i<p;i++)A[i]=(p-p/i)*A[p%i]%p;
}

int main(){			
    make_prime(1000);
    for(int i=1;i<=1000;i++)if(!prime[i])printf("%d\n",i);
    
    return 0;
}
